# Si assume che
# 1) ip e porta del seed node, cioè il controller
# 2) ip e porte del GUI handler
# siano statici e uguali per tutte le macchine
# le uniche cose che variano in base alla macchina sono
# 1) akka.remote.netty.tcp.hostname (IP della macchina)
# 2) akka.remote.netty.tcp.port (porta della macchina)
# 3) akka.cluster.roles (ruolo della macchina)
akka {
  #loglevel = "DEBUG"
  log-dead-letters = on
  #log-dead-letters-during-shutdown = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor.debug.unhandled = on
  
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://UrbanSimulator@127.0.0.1:2551"]
    auto-down-unreachable-after = 10s
    roles = ["controller"]
    log-info = off
    role {
    	controller.min-nr-of-members = 1
    	guihandler.min-nr-of-members = 1
    	worker.min-nr-of-members = 1
    }
  }
  
  #persistence {
  #  specifica il plugin
  #  journal.plugin = "akka.persistence.journal.leveldb-shared"
  #  specifica impostazioni del plugin
  #  journal.leveldb-shared.store {
  #  	tenere OFF solo in testing
  #  	native = off
  #  	dir = "target/shared-journal"
  # }
  #  snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  #  snapshot-store.local.dir = "target/snapshots"
  #}
}

akka.persistence.journal.plugin = "akka-contrib-mongodb-persistence-journal"
akka.persistence.snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
akka.contrib.persistence.mongodb.mongo.driver = "akka.contrib.persistence.mongodb.CasbahPersistenceExtension"
akka.contrib.persistence.mongodb.mongo.mongouri = "mongodb://mpozza:011092@ds037611.mlab.com:37611/scd"
#akka.contrib.persistence.mongodb.mongo.mongouri = "mongodb://mpozza:011092@ds029565.mlab.com:29565/scd"
akka.contrib.persistence.mongodb.mongo.journal-collection = "persistent_journal"
akka.contrib.persistence.mongodb.mongo.journal-index = "journal_index"
akka.contrib.persistence.mongodb.mongo.snaps-collection = "persistent_snapshots"
akka.contrib.persistence.mongodb.mongo.snaps-index = "snaps_index"
akka.contrib.persistence.mongodb.mongo.journal-write-concern = "Acknowledged"

akka.contrib.persistence.mongodb.mongo.journal-wtimeout = 10s
akka.contrib.persistence.mongodb.mongo.breaker.maxTries = 0
akka.contrib.persistence.mongodb.mongo.breaker.timeout.call = 10s

#akka.contrib.persistence.mongodb.mongo.urls = ["ds037611.mlab.com:37611"]
#akka.contrib.persistence.mongodb.mongo.db = "scd"
#akka.contrib.persistence.mongodb.mongo.username = "mpozza"
#akka.contrib.persistence.mongodb.mongo.password = "011092"

# parametri at-least-once semantic
akka.persistence.at-least-once-delivery.redeliver-interval = 3s
akka.persistence.at-least-once-delivery.warn-after-number-of-unconfirmed-attempts = 3
#akka.persistence.at-least-once-delivery.max-unconfirmed-messages = 10

akka.contrib.cluster.sharding {
	role = "worker"
}

akka.extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]

#akka.loglevel = DEBUG
#akka.debug.receive = on
#akka.debug.autoreceive = on
#akka.debug.lifecycle = on

mysample {
  host = "0.0.0.0"
  ports {
    http = 9692
    ws = 6696
  }
}

spray.can.server {
  request-timeout = 1s
  ssl-encryption = off
}

# sezione che decreta valori di configurazione del sistema
domain {
	# ricorda che num_nodes rappresenta il numero di worker, non di nodi totali del sistema
	num_nodes = 1
	num_pedestrians = 2
	num_cars = 6
	# velocity factor DEVE essere un double
	# più è grande, maggiore è la dilatazione temporale (più lento)
	velocity_factor = 1.0
}

custom-dispatcher {
  	# Dispatcher is the name of the event-based dispatcher
  	type = Dispatcher
  	# What kind of ExecutionService to use
  	executor = "fork-join-executor"
  	# Configuration for the fork join pool
  	fork-join-executor {
    	# Min number of threads to cap factor-based parallelism number to
    	parallelism-min = 4
    	# Parallelism (threads) ... ceil(available processors * factor)
    	parallelism-factor = 2.0
    	# Max number of threads to cap factor-based parallelism number to
    	parallelism-max = 64
  	}
  	# Throughput defines the maximum number of messages to be
  	# processed per actor before the thread jumps to the next actor.
  	# Set to 1 for as fair as possible.
  	throughput = 1
}